name: CI
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "**"
    types: [opened, synchronize]

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  integration-tests:
    if: (github.event.action != 'closed' || github.event.pull_request.merged == true)
    strategy:
      matrix:
        os: [ ubuntu-20.04 ] # list of os: https://github.com/actions/virtual-environments
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: arpit/pos-655-2

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install build-essential
          curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
          sudo snap install solc
          sudo apt install python2 jq curl
          sudo ln -sf /usr/bin/python2 /usr/bin/python

      - uses: actions/setup-node@v3
        with:
          node-version: '10.17.0'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            devnet/code/contracts/package-lock.json
            devnet/code/genesis-contracts/package-lock.json
            devnet/code/genesis-contracts/matic-contracts/package-lock.json

      - name: Bootstrap devnet
        run: |
          npm install --prefer-offline --no-audit --progress=false
          mkdir devnet
          cd devnet
          ./bin/matic-cli setup devnet -c ./.github/matic-cli-config.yml

      - name: Launch devnet
        run: |
          cd devnet
          bash docker-ganache-start.sh
          bash docker-heimdall-start-all.sh
          bash docker-bor-setup.sh
          bash docker-bor-start-all.sh
          sleep 120 && bash ganache-deployment-bor.sh
          sleep 120 && bash ganache-deployment-sync.sh
          sleep 120
          docker exec bor0 bash -c "bor attach /root/.bor/data/bor.ipc -exec 'admin.peers'"
          docker exec bor0 bash -c "bor attach /root/.bor/data/bor.ipc -exec 'eth.blockNumber'"

      - name: Run smoke tests
        run: |
          echo "Deposit 100 matic for each account to bor network"
          cd ./devnet/code/contracts
          npm run truffle exec scripts/deposit.js -- --network development $(jq -r .root.tokens.MaticToken contractAddresses.json) 100000000000000000000
          cd -
          timeout 20m bash ./.github/smoke_test.sh

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs_${{ github.run_id }}
          path: |
            ./devnet/logs

      - name: Package code and chain data
        if: always()
        run: |
          cd ./devnet
          docker compose down --remove-orphans
          cd -
          mkdir -p ${{ github.run_id }}/matic-cli
          sudo mv bor ${{ github.run_id }}
          sudo mv devnet ${{ github.run_id }}/matic-cli
          sudo tar czf code.tar.gz ${{ github.run_id }}

      - name: Upload code and chain data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code_${{ github.run_id }}
          path: code.tar.gz
